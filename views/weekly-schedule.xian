{{> layouts/base pageTitle="Weekly Schedule" activePage="schedules"}}

{{#contentFor "content"}}
<section>
  <!-- Week Navigation -->
  <div class="flex items-center justify-between mb-6">
    <div class="flex items-center gap-4">
      <h2 class="text-2xl font-bold">Weekly Schedule</h2>
      <div class="flex items-center gap-2">
        <button class="btn text-gray-600 border border-gray-300" onclick="navigateWeek('prev')">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
          </svg>
        </button>
        <button class="btn text-gray-600 border border-gray-300" onclick="navigateWeek('current')">This Week</button>
        <button class="btn text-gray-600 border border-gray-300" onclick="navigateWeek('next')">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
        </button>
      </div>
      <span id="weekDisplay" class="text-gray-600 font-medium"></span>
    </div>
    
    <div class="flex items-center gap-2">
      <select id="viewFilter" class="border border-gray-300 rounded-lg px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-highlight/40">
        <option value="all">All Rooms</option>
        <option value="available">Available Only</option>
        <option value="occupied">Occupied Only</option>
      </select>
      <button onclick="printSchedule()" class="btn text-gray-600 border border-gray-300">Print</button>
      <button onclick="openModal('scheduleModal')" class="btn btn-primary">+ Add Schedule</button>
    </div>
  </div>
  
  <!-- Week Summary Stats -->
  <div class="grid gap-4 md:grid-cols-5 mb-6">
    <div class="card">
      <p class="text-xs uppercase tracking-wide text-gray-500">Total Hours</p>
      <p class="text-2xl font-semibold mt-1" id="totalHours">126</p>
    </div>
    <div class="card">
      <p class="text-xs uppercase tracking-wide text-gray-500">Classes</p>
      <p class="text-2xl font-semibold mt-1" id="totalClasses">42</p>
    </div>
    <div class="card">
      <p class="text-xs uppercase tracking-wide text-gray-500">Rooms Used</p>
      <p class="text-2xl font-semibold mt-1" id="roomsUsed">8/10</p>
    </div>
    <div class="card">
      <p class="text-xs uppercase tracking-wide text-gray-500">Faculty Active</p>
      <p class="text-2xl font-semibent mt-1" id="facultyActive">15</p>
    </div>
    <div class="card">
      <p class="text-xs uppercase tracking-wide text-gray-500">Utilization</p>
      <p class="text-2xl font-semibold mt-1 text-brand" id="weekUtilization">84%</p>
    </div>
  </div>
  
  <!-- Weekly Schedule Grid -->
  <div class="bg-white rounded-xl shadow-sm overflow-hidden">
    <!-- Day Headers -->
    <div class="schedule-header grid grid-cols-6 bg-gray-50 border-b">
      <div class="p-4 border-r">
        <div class="text-sm font-semibold text-gray-700">Time</div>
      </div>
      <div class="p-4 border-r text-center" id="monday-header">
        <div class="text-sm font-semibold text-gray-700">Monday</div>
        <div class="text-xs text-gray-500" id="monday-date"></div>
      </div>
      <div class="p-4 border-r text-center" id="tuesday-header">
        <div class="text-sm font-semibold text-gray-700">Tuesday</div>
        <div class="text-xs text-gray-500" id="tuesday-date"></div>
      </div>
      <div class="p-4 border-r text-center" id="wednesday-header">
        <div class="text-sm font-semibold text-gray-700">Wednesday</div>
        <div class="text-xs text-gray-500" id="wednesday-date"></div>
      </div>
      <div class="p-4 border-r text-center" id="thursday-header">
        <div class="text-sm font-semibold text-gray-700">Thursday</div>
        <div class="text-xs text-gray-500" id="thursday-date"></div>
      </div>
      <div class="p-4 text-center" id="friday-header">
        <div class="text-sm font-semibold text-gray-700">Friday</div>
        <div class="text-xs text-gray-500" id="friday-date"></div>
      </div>
    </div>
    
    <!-- Time Slots -->
    <div class="schedule-body" id="scheduleGrid">
      <!-- Generated by JavaScript -->
    </div>
  </div>
  
  <!-- Room Legend -->
  <div class="mt-6 bg-white rounded-xl shadow-sm p-6">
    <h3 class="text-lg font-semibold mb-4">Room Legend</h3>
    <div class="grid md:grid-cols-3 gap-4">
      <div class="space-y-2">
        <h4 class="font-medium text-gray-900">Main Building</h4>
        <div class="space-y-1 text-sm">
          <div class="flex items-center gap-2">
            <div class="w-3 h-3 bg-blue-200 rounded"></div>
            <span>Room 101 (30 seats)</span>
          </div>
          <div class="flex items-center gap-2">
            <div class="w-3 h-3 bg-blue-300 rounded"></div>
            <span>Room 102 (25 seats)</span>
          </div>
          <div class="flex items-center gap-2">
            <div class="w-3 h-3 bg-blue-400 rounded"></div>
            <span>Room 201 (40 seats)</span>
          </div>
        </div>
      </div>
      
      <div class="space-y-2">
        <h4 class="font-medium text-gray-900">Science Building</h4>
        <div class="space-y-1 text-sm">
          <div class="flex items-center gap-2">
            <div class="w-3 h-3 bg-green-200 rounded"></div>
            <span>Room 105 (45 seats)</span>
          </div>
          <div class="flex items-center gap-2">
            <div class="w-3 h-3 bg-green-300 rounded"></div>
            <span>Lab 201 (20 seats)</span>
          </div>
          <div class="flex items-center gap-2">
            <div class="w-3 h-3 bg-green-400 rounded"></div>
            <span>Lab 202 (20 seats)</span>
          </div>
        </div>
      </div>
      
      <div class="space-y-2">
        <h4 class="font-medium text-gray-900">Engineering Building</h4>
        <div class="space-y-1 text-sm">
          <div class="flex items-center gap-2">
            <div class="w-3 h-3 bg-purple-200 rounded"></div>
            <span>Lab 301 (20 seats)</span>
          </div>
          <div class="flex items-center gap-2">
            <div class="w-3 h-3 bg-purple-300 rounded"></div>
            <span>Lab 302 (25 seats)</span>
          </div>
          <div class="flex items-center gap-2">
            <div class="w-3 h-3 bg-purple-400 rounded"></div>
            <span>Room 350 (60 seats)</span>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<!-- Schedule Modal -->
{{> modal modalId="scheduleModal" title="Add New Schedule" subtitle="Create a new class schedule" width="lg" showFooter=false}}

<!-- Time Slot Detail Modal -->
{{> modal modalId="timeSlotModal" title="Time Slot Details" width="md" showFooter=false}}

<style>
.schedule-grid {
  display: grid;
  grid-template-columns: 100px repeat(5, 1fr);
}

.time-slot {
  min-height: 60px;
  border-bottom: 1px solid #e5e7eb;
  position: relative;
}

.time-slot:hover {
  background-color: #f9fafb;
}

.schedule-event {
  position: absolute;
  left: 2px;
  right: 2px;
  border-radius: 4px;
  padding: 4px 6px;
  font-size: 0.75rem;
  line-height: 1.2;
  cursor: pointer;
  transition: all 0.2s;
  z-index: 1;
}

.schedule-event:hover {
  transform: translateY(-1px);
  box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1);
  z-index: 2;
}

.time-label {
  background-color: #f9fafb;
  border-right: 1px solid #e5e7eb;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.75rem;
  color: #6b7280;
  font-weight: 500;
}

.day-column {
  border-right: 1px solid #e5e7eb;
  position: relative;
}

.day-column:last-child {
  border-right: none;
}

.schedule-event-cs { background: #dbeafe; color: #1e40af; border: 1px solid #93c5fd; }
.schedule-event-math { background: #dcfce7; color: #15803d; border: 1px solid #86efac; }
.schedule-event-phy { background: #fef3c7; color: #d97706; border: 1px solid #fcd34d; }
.schedule-event-eng { background: #e0e7ff; color: #5b21b6; border: 1px solid #c4b5fd; }
.schedule-event-chem { background: #fce7f3; color: #be185d; border: 1px solid #f9a8d4; }
</style>

<script>
// Weekly schedule data
const weeklySchedules = [
  {
    id: 1,
    subjectCode: 'CS101',
    subjectTitle: 'Computer Science Fundamentals',
    faculty: 'Dr. Smith',
    roomName: 'Room 201',
    building: 'Main Building',
    startTime: '09:00',
    endTime: '10:30',
    days: ['Monday', 'Wednesday', 'Friday'],
    status: 'Active',
    color: 'cs'
  },
  {
    id: 2,
    subjectCode: 'MATH202',
    subjectTitle: 'Calculus II',
    faculty: 'Prof. Johnson',
    roomName: 'Room 105',
    building: 'Science Building',
    startTime: '11:00',
    endTime: '12:30',
    days: ['Tuesday', 'Thursday'],
    status: 'Active',
    color: 'math'
  },
  {
    id: 3,
    subjectCode: 'PHY301',
    subjectTitle: 'Physics Laboratory',
    faculty: 'Dr. Williams',
    roomName: 'Lab 301',
    building: 'Engineering Building',
    startTime: '14:00',
    endTime: '17:00',
    days: ['Monday', 'Wednesday'],
    status: 'Active',
    color: 'phy'
  },
  {
    id: 4,
    subjectCode: 'ENG101',
    subjectTitle: 'English Composition',
    faculty: 'Prof. Davis',
    roomName: 'Room 102',
    building: 'Main Building',
    startTime: '08:00',
    endTime: '09:30',
    days: ['Monday', 'Wednesday', 'Friday'],
    status: 'Active',
    color: 'eng'
  },
  {
    id: 5,
    subjectCode: 'CHEM201',
    subjectTitle: 'Organic Chemistry',
    faculty: 'Dr. Brown',
    roomName: 'Lab 201',
    building: 'Science Building',
    startTime: '13:00',
    endTime: '15:00',
    days: ['Tuesday', 'Thursday'],
    status: 'Active',
    color: 'chem'
  }
];

let currentWeekStart = new Date();

document.addEventListener('DOMContentLoaded', function() {
  // Set current week start to Monday
  const today = new Date();
  const dayOfWeek = today.getDay();
  const monday = new Date(today);
  monday.setDate(today.getDate() - (dayOfWeek === 0 ? 6 : dayOfWeek - 1));
  currentWeekStart = monday;
  
  renderWeeklySchedule();
  updateWeekDisplay();
  
  // Load schedule form
  const scheduleModal = document.getElementById('scheduleModal');
  if (scheduleModal) {
    const contentSlot = scheduleModal.querySelector('.modal-content-slot');
    if (contentSlot) {
      contentSlot.innerHTML = `{{> forms/scheduleForm}}`;
    }
  }
});

function renderWeeklySchedule() {
  const scheduleGrid = document.getElementById('scheduleGrid');
  const startHour = 7;
  const endHour = 19;
  const slotDuration = 30; // minutes
  
  scheduleGrid.innerHTML = '';
  
  // Generate time slots
  for (let hour = startHour; hour < endHour; hour++) {
    for (let minute = 0; minute < 60; minute += slotDuration) {
      const timeString = formatTime(hour, minute);
      const slotId = `slot-${hour}-${minute}`;
      
      const timeSlot = document.createElement('div');
      timeSlot.className = 'time-slot grid grid-cols-6';
      timeSlot.innerHTML = `
        <div class="time-label">${timeString}</div>
        <div class="day-column" data-day="Monday" data-time="${hour}:${minute.toString().padStart(2, '0')}"></div>
        <div class="day-column" data-day="Tuesday" data-time="${hour}:${minute.toString().padStart(2, '0')}"></div>
        <div class="day-column" data-day="Wednesday" data-time="${hour}:${minute.toString().padStart(2, '0')}"></div>
        <div class="day-column" data-day="Thursday" data-time="${hour}:${minute.toString().padStart(2, '0')}"></div>
        <div class="day-column" data-day="Friday" data-time="${hour}:${minute.toString().padStart(2, '0')}"></div>
      `;
      
      scheduleGrid.appendChild(timeSlot);
    }
  }
  
  // Add schedule events
  weeklySchedules.forEach(schedule => {
    schedule.days.forEach(day => {
      addScheduleEvent(schedule, day);
    });
  });
  
  updateWeekDates();
}

function addScheduleEvent(schedule, day) {
  const [startHour, startMinute] = schedule.startTime.split(':').map(Number);
  const [endHour, endMinute] = schedule.endTime.split(':').map(Number);
  
  const startSlot = document.querySelector(`[data-day="${day}"][data-time="${startHour}:${startMinute.toString().padStart(2, '0')}"]`);
  
  if (startSlot) {
    const duration = (endHour * 60 + endMinute) - (startHour * 60 + startMinute);
    const height = (duration / 30) * 60 - 4; // Adjust for padding
    
    const eventElement = document.createElement('div');
    eventElement.className = `schedule-event schedule-event-${schedule.color}`;
    eventElement.style.height = `${height}px`;
    eventElement.innerHTML = `
      <div class="font-semibold truncate">${schedule.subjectCode}</div>
      <div class="truncate">${schedule.roomName}</div>
      <div class="text-xs opacity-75">${schedule.faculty}</div>
    `;
    
    eventElement.addEventListener('click', () => showScheduleDetails(schedule));
    
    startSlot.appendChild(eventElement);
  }
}

function showScheduleDetails(schedule) {
  const modal = document.getElementById('timeSlotModal');
  const contentSlot = modal.querySelector('.modal-content-slot');
  
  contentSlot.innerHTML = `
    <div class="space-y-4">
      <div>
        <h3 class="text-lg font-semibold text-brand">${schedule.subjectCode}</h3>
        <p class="text-gray-600">${schedule.subjectTitle}</p>
      </div>
      
      <div class="grid md:grid-cols-2 gap-4 text-sm">
        <div class="space-y-2">
          <div><span class="font-medium">Faculty:</span> ${schedule.faculty}</div>
          <div><span class="font-medium">Room:</span> ${schedule.roomName}</div>
          <div><span class="font-medium">Building:</span> ${schedule.building}</div>
        </div>
        <div class="space-y-2">
          <div><span class="font-medium">Time:</span> ${schedule.startTime} - ${schedule.endTime}</div>
          <div><span class="font-medium">Days:</span> ${schedule.days.join(', ')}</div>
          <div><span class="font-medium">Status:</span> <span class="badge badge-green">${schedule.status}</span></div>
        </div>
      </div>
      
      <div class="flex gap-2 pt-4 border-t">
        <button onclick="editSchedule(${schedule.id})" class="btn btn-primary">Edit</button>
        <button onclick="closeModal('timeSlotModal')" class="btn text-gray-600 border border-gray-300">Close</button>
      </div>
    </div>
  `;
  
  openModal('timeSlotModal');
}

function navigateWeek(direction) {
  switch (direction) {
    case 'prev':
      currentWeekStart.setDate(currentWeekStart.getDate() - 7);
      break;
    case 'next':
      currentWeekStart.setDate(currentWeekStart.getDate() + 7);
      break;
    case 'current':
      const today = new Date();
      const dayOfWeek = today.getDay();
      currentWeekStart = new Date(today);
      currentWeekStart.setDate(today.getDate() - (dayOfWeek === 0 ? 6 : dayOfWeek - 1));
      break;
  }
  
  updateWeekDisplay();
  updateWeekDates();
}

function updateWeekDisplay() {
  const weekEnd = new Date(currentWeekStart);
  weekEnd.setDate(currentWeekStart.getDate() + 4); // Friday
  
  const display = `${formatDate(currentWeekStart)} - ${formatDate(weekEnd)}`;
  document.getElementById('weekDisplay').textContent = display;
}

function updateWeekDates() {
  const days = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday'];
  
  days.forEach((day, index) => {
    const date = new Date(currentWeekStart);
    date.setDate(currentWeekStart.getDate() + index);
    
    const dateElement = document.getElementById(`${day}-date`);
    if (dateElement) {
      dateElement.textContent = formatDate(date);
    }
  });
}

function formatTime(hour, minute) {
  const ampm = hour >= 12 ? 'PM' : 'AM';
  const displayHour = hour % 12 || 12;
  return `${displayHour}:${minute.toString().padStart(2, '0')} ${ampm}`;
}

function formatDate(date) {
  return date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });
}

function printSchedule() {
  window.print();
}

function editSchedule(scheduleId) {
  closeModal('timeSlotModal');
  openModal('scheduleModal');
}
</script>
{{/contentFor}}